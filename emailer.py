from datetime import datetime

import emails
from emails.template import JinjaTemplate as T

import config

email_subject = "Frosty predicts {{temperature}}Â° F at {{temp_time}}"
email_contents = "<img src='temps_plot.png'><p>This message was generated by Frosty at {{now}}.</p>"


def send_email(min_data):
    '''Send an email notification with the min temp & time and a plot of the temperature forecast.

    Parameters
    ----------
    min_data : tuple
        Minimum temperature, datetime object of minimum temperature
    '''

    message = emails.html(subject=T(email_subject),
                          html=T(email_contents),
                          mail_from=(config.email["from"]["name"], config.email["from"]["email"]))

    message.attach(filename='temps_plot.png',
                   data=open('temps_plot.png', 'rb'))
    message.attachments['temps_plot.png'].is_inline = True
    message.transformer.synchronize_inline_images()
    message.transformer.save()

    render_data = {
        "temperature": min_data[0],
        "temp_time": min_data[1].strftime("%-I:%M %p on %A %b %-d"),
        "now": datetime.now().strftime("%-I:%M %p %A %b %-d %Y")
    }

    return message.send(to=(config.email["to"]["name"], config.email["to"]["email"]),
                        render=render_data,
                        smtp=config.email["smtp"])
